#Read book data from Bookdata.csv
Read in array av values from "Bookdata.csv"
Set Bookdata to array of values

#Clean data. Data has been cleaned with planned algorithm in mind and contain only valid data. 
Set index to 0

#Display for user find books based on book title
WHILE (index < length of Bookdata) 
Read string from Title_array[index]
Set result list of matching Bookdata[index]
ENDWHILE

#Display for user find books based on author name
WHILE (index < length of Bookdata) 
  Read string from Author_array[index]
  Set result list of matching Bookdata[index]
ENDWHILE

#Display for user whether a book is popular or not. Will display message if it exceeds a certain threshold or goes below another
WHILE (index<length of book_data)
  IF (Total_loans exceed 30) 
      print "this book is popular, give it a try!"
    ELSE IF (Total_loans fall below 5)
      print "This book could use some attention."
    ELSE IF print "This book is average" #What happens if none of the above is true.
  ENDIF
ENDWHILE

#Display for user and find popular books within subset
WHILE (index<length of book_data)
  IF (Total loans_array exceed 30), 
      print "this book is popular in your chosen genre!"
in Bookdata_array[index]
  ENDIF

#Display for user a sorted list of most popular shelf codes
  Set shelf_loans_array to empty array
  Set catind to 0
Set shelf_total to shelf_total + object.total

#this code makes a list that contains the summarized loans per shelf code
WHILE (catind < length of Bookdata)
    Read shelf_code, total_loans from Bookdata[catind]

#this code creates a new shelf code listing if it's not already in the array
IF shelf_code not in shelf_loans_array
    Read new shelf_total with shelf_code, total_loans, count = 1 
#double check naming of variables above
    ELSE
        Read existing shelf_stat: add rating, add growth, increment count
    ENDIF
    Set index to catind + 1
ENDWHILE

sort list
WRITE top ten items in shelf_loans_array















#max
