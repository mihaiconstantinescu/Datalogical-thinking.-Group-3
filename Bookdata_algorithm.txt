#Read book data from Bookdata.csv
Read in array of values from "Bookdata.csv"
Set Bookdata to array of values
#Clean data. Data has been cleaned with planned algorithm in mind and contain only valid data. 

#Display for user and find books based on book title
WRITE "Enter the booktitle you would like to find"
READ input 
SET index to 0
SET Title_array to empty array #contains matching books
  WHILE (index < length of Bookdata) #FUNCTION START HERE
    IF (Bookdata[index].title contains input) 
      ADD Bookdata[index] to Title_array
    Set index to index + 1
  ENDWHILE #FUNCTION END HERE
  IF Title_array contains data
    print Title_array
  ELSE
    print "No matches"

#Display for user and find books based on author name
WRITE "Enter the author you would like to find"
READ input 
SET index to 0
SET Author_array to empty array #contains matching author
  WHILE (index < length of Bookdata) 
  IF (Bookdata[index].authorLast OR Bookdata[index].authorFirst contains input) #partial matches allowed
      ADD Bookdata[index] to Author_array
    Set index to index + 1
  ENDWHILE 
    IF Author_array contains data
    print Author_array
  ELSE
    print "No matches"

#Display for user whether a book is popular or not. Will display message if it exceeds a certain threshold or goes below another
WRITE "Enter the exact booktitle of book you want to check the popularity of?"
READ input
SET Title_array to empty array
*RUN title search function above #row 10-14, so only the loop, no print
SET index to 0
  WHILE (index<length of Title_array)
    IF (Title_array[index].Total_loans exceed 30) 
            print "This book is popular, give it a try!"
          ELSE IF (Title_array[index].Total_loans fall below 5)
            print "This book could use some attention."
          ELSE
            print "This book is average"
    ENDIF
    Set index to index + 1
  ENDWHILE

#Display for user and find popular books within certain shelf code
WRITE "Enter the shelf code you want search for popular books in"
READ input
SET index to 0
SET loans_array to empty array
  WHILE (index<length of Bookdata)
    IF (Bookdata[index].shelf_code matches input) AND (Bookdata[index].Total_loans exceed 30) #we have decided a book that's loaned more than 30 times is popular
        ADD Bookdata[index] to loans_array
    ENDIF
    SET index to index + 1
  ENDWHILE
  IF loans_array contains data
    print loans_array
  ELSE
    print "No results"

#Display for user a sorted list of most popular shelf codes based on total loans
SET shelf_loans_array to empty array
SET index to 0
  WHILE (index < length of Bookdata)
      READ shelf_code, total_loans from Bookdata[index]
        IF shelf_code not in shelf_loans_array
          ADD new shelf_total with shelf_code, total_loans, count = 1 
        ELSE
          ADD to existing shelf_total: add total_loans, increment count
        ENDIF
      SET index to index + 1
  ENDWHILE
sort shelf_loans_array in decreasing order based on shelf_total
print "these are the top ten shelf codes in terms of total loans:" 
print top ten shelf codes in shelf_loans_array